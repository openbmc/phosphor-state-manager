{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0a5398d9_7cf4e729",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-07-30T13:27:40Z",
      "side": 1,
      "message": "Also needed for BMC, Chassis, and Hypervisor in this repo? Or was this a host-only thing?",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d7cd4aa_da7c6138",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-30T17:44:53Z",
      "side": 1,
      "message": "Yes. This would be needed for all of them. Once we settle on the direction, I will get those patches up.",
      "parentUuid": "0a5398d9_7cf4e729",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d559c2ca_a301530b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-07-23T07:17:37Z",
      "side": 1,
      "message": "Does this commit relate to this issue https://discord.com/channels/775381525260664832/775381525260664836/1251022871258468432?",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1538ccc0_cda8eec7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-24T16:43:06Z",
      "side": 1,
      "message": "Yes! I am working on resolving the other units as well.",
      "parentUuid": "d559c2ca_a301530b",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5900024_53643c2d",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-07-23T07:17:37Z",
      "side": 1,
      "message": "Could we change this MACRO to the configuration option and the `host-objpath` value should be removed?",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26d808e0_8747205d",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-24T16:43:06Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e5900024_53643c2d",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98247f52_080037ae",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-24T17:15:33Z",
      "side": 1,
      "message": "\u003cdid not mean to resolve\u003e\nThanks for the hint, I see there are other state managers in the repo and they all have the same issue. Example, bmc_state_manager, chassis_state_manager, etc. They all have options in meson to configure the path. So, this commit by itself is incomplete, I should fix all those either in this commit or follow ups.\n\nI see multiple options here:\n(1) We could do a dirname(objPathInst) and that would reuse meson configuration all across the board.\n(2) Convert all the meson configuration to provide just the name, for example,\n```\n    \u0027host-objpath\u0027, type: \u0027string\u0027,\n    value: \u0027/xyz/openbmc_project/state/host\u0027,\n```\nCould be\n```\n    \u0027host-objpath\u0027, type: \u0027string\u0027,\n    value: \u0027host\u0027,\n```\nAnd the source would have a macro for \u0027/xyz/openbmc_project/state\u0027 and we can infer objPathInst\n```\nauto objPathInst \u003d std::string(HOST_STATE_OBJMGR_PATH) + \"/\" + std::string{HOST_OBJPATH} + std::to_string(hostId); \n```\nI need to check how consistent this is across all the state managers.",
      "parentUuid": "26d808e0_8747205d",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2568ef06_1aaac0ce",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-26T13:31:01Z",
      "side": 1,
      "message": "Don\u0027t use Meson for this.  We need to get away from using it for these dbus configurations.\n\n\nThe phosphor-dbus-interfaces already defines the appropriate path to use here.\n\n```\nsdbusplus::server::xyz::openbmc_project::state::Host::namespace_path::value\n```\n\nThis is probably the same thing as: `phosphor::state::manager::Host::namespace_path::value` ?",
      "parentUuid": "98247f52_080037ae",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "63735fcc_99fe4a1c",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-29T20:01:58Z",
      "side": 1,
      "message": "Even better. Thanks. I was wondering how it would even work if I compiled it with arbitrary paths",
      "parentUuid": "2568ef06_1aaac0ce",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e188d206_41eefb5a",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1000212
      },
      "writtenOn": "2024-07-30T17:44:53Z",
      "side": 1,
      "message": "Worked through this and used properties from phosphor-dbus-interfaces instead of meson build objects. Checked that no machine in openbmc/openbmc is setting host-objpath, host-busname, so, it is safe to remove. If this is the direction we want to go in, I can probably split this patch up and work on the other interfaces in this repo, like chassis-state.",
      "parentUuid": "63735fcc_99fe4a1c",
      "revId": "58dd78faaa6b0c76f7b13db4953e50efb63aedcd",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}