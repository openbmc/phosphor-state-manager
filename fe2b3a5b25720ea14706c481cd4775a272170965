{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "2ab89c30_e3f47b22",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1001266
      },
      "writtenOn": "2022-03-15T09:58:35Z",
      "side": 1,
      "message": "PLEASE DO NOT MERGE this patchset:\n\nThis patch will change HOST0 busname to \"xyz.openbmc_project.State.Host0\",\nhowever we noticed there are many services/packages hardcoding host busname to \"xyz.openbmc_project.State.Host\", we are afraid of some single-host platform will broken.\n\nBecause its too hard to modify everywhere hardcode busname for now...,we\u0027d like to keep the bus name of HOST0 to original \"xyz.openbmc_project.State.Host\" instead of change to \"xyz.openbmc_project.State.Host0\" at next patchset, how will you suggest for this?",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "620c5de1_b5dd1a9b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:39:01Z",
      "side": 1,
      "message": "Just a minor nit on the default initialization.  Otherwise looks good to go to my eyes.  Thanks Allen!",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "17de20ec_5cec2355",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 9
      },
      "lineNbr": 0,
      "author": {
        "id": 1001266
      },
      "writtenOn": "2022-03-16T07:22:16Z",
      "side": 1,
      "message": "Thanks for your helpful suggestions!",
      "parentUuid": "620c5de1_b5dd1a9b",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c571157b_47f29da8",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T11:14:13Z",
      "side": 1,
      "message": "it seems id won\u0027t change, could we make it const?",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "66337714_9cf1a20e",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:39:01Z",
      "side": 1,
      "message": "Also prefer default initialization on it: `size_t id \u003d 0`.\n\nI\u0027m not too concerned on the constness but you\u0027re welcome to make that change.",
      "parentUuid": "c571157b_47f29da8",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f5d003e0_4c8142b9",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1001266
      },
      "writtenOn": "2022-03-16T07:22:16Z",
      "side": 1,
      "message": "Same as Potin replies at chassis state manager ,I thought member initializer list will initialize this variable, or should we add default value to constructor parameter at line 56?\n\nHost(sdbusplus::bus::bus\u0026 bus, const char* objPath, size_t id \u003d 0) :",
      "parentUuid": "66337714_9cf1a20e",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3713440b_876755c7",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-17T01:39:20Z",
      "side": 1,
      "message": "It can be an optional constructor parameter.  That is separate.\n\nYou should initialize it in the constructor when you have the value (ie. the constructor variant that has `id` as a parameter).  It is also good practice to add a sane default at the definition site.  This is good for maintainability if someone adds a new constructor and doesn\u0027t need to manipulate `id` for their constructor variant; the class will already have code to handle this because you\u0027ve specified the default.",
      "parentUuid": "f5d003e0_4c8142b9",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47a38076_28ecf2bd",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1001266
      },
      "writtenOn": "2022-03-17T02:13:32Z",
      "side": 1,
      "message": "\u003e It can be an optional constructor parameter.  That is separate.\n\u003e \n\u003e You should initialize it in the constructor when you have the value (ie. the constructor variant that has `id` as a parameter).  It is also good practice to add a sane default at the definition site.  This is good for maintainability if someone adds a new constructor and doesn\u0027t need to manipulate `id` for their constructor variant; the class will already have code to handle this because you\u0027ve specified the default.\n\nI understand it, to set default value at definition ,user can add constructor without id parameter. (like the old one or some single host specific feature?)",
      "parentUuid": "3713440b_876755c7",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b31749a5_a2011497",
        "filename": "host_state_manager.hpp",
        "patchSetId": 9
      },
      "lineNbr": 297,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-17T09:34:59Z",
      "side": 1,
      "message": "\u003e I understand it, to set default value at definition ,user can add constructor without id parameter. (like the old one or some single host specific feature?)\n\nYes.\n\nThis suggestion isn\u0027t necessarily about this particular class, but a general principle that should be followed in C++ code.  Modern C++ should have a default value for every member, if possible.",
      "parentUuid": "47a38076_28ecf2bd",
      "revId": "fe2b3a5b25720ea14706c481cd4775a272170965",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}