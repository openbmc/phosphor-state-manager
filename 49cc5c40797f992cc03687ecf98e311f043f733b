{
  "comments": [
    {
      "key": {
        "uuid": "56a7df0b_6e4c8ab9",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 268,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:37:25Z",
      "side": 1,
      "message": "Is this method and/or values specific to one particular BMC?  How do we know we are on that BMC type?",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "422c2a27_08725fdb",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 268,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-08-25T01:31:32Z",
      "side": 1,
      "message": "No, this method is leverage by Linux kernel watchdog design. It is a read only file.\nIt contains status of the watchdog device at boot. It is equivalent to\nWDIOC_GETBOOTSTATUS of ioctl interface.",
      "parentUuid": "56a7df0b_6e4c8ab9",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36bd751c_80795989",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 268,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T11:45:57Z",
      "side": 1,
      "message": "If this is all \"standard kernel\" stuff, why aren\u0027t we using watchdog.h for the constants?",
      "parentUuid": "422c2a27_08725fdb",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a804e40a_b9039a20",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:37:25Z",
      "side": 1,
      "message": "Would this be clearer as a case?",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0adf5363_0a4d68e0",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-08-25T01:31:32Z",
      "side": 1,
      "message": "This define WDIOF_EXTERN1 is means External monitoring relay/source 1 was triggered.\nControllers intended for real world applications include external monitoring pins\nthat will trigger a reset. This description is from Linux watchdog-api.\nCustomer know this API definition when they design userspace application.",
      "parentUuid": "a804e40a_b9039a20",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8b503f5b_06e065e9",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 6
      },
      "lineNbr": 287,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T11:45:57Z",
      "side": 1,
      "message": "I meant:\n\nswitch(bootstatus) {\n    case WDIOF_EXTERN1:\n...\n    case WDIOF_CARDRESET:\n...\n    default:\n}",
      "parentUuid": "0adf5363_0a4d68e0",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2c8625b_96acfa33",
        "filename": "meson.build",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:37:25Z",
      "side": 1,
      "message": "I don\u0027t think there is a good reason to make these packageconfig is there?  This seems a little ridiculous.",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4d48fade_04450570",
        "filename": "meson.build",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-08-25T01:31:32Z",
      "side": 1,
      "message": "I just want to make consistence of phosphor-state-manager with our modification.",
      "parentUuid": "d2c8625b_96acfa33",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14acb1f2_01824bb0",
        "filename": "meson.build",
        "patchSetId": 6
      },
      "lineNbr": 53,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T11:45:57Z",
      "side": 1,
      "message": "None of this should be configured though.  We have WAY too many configuration options in this repository as it is.\n\nThese WDIOF_* constants come from the kernel in watchdog.h.  Use that header.  There is zero reason anyone would ever change that.",
      "parentUuid": "4d48fade_04450570",
      "range": {
        "startLine": 49,
        "startChar": 0,
        "endLine": 53,
        "endChar": 53
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6826be6c_197f89f1",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:37:25Z",
      "side": 1,
      "message": "Can this just be a constant in the code?  Is it likely to change?",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "de77d17f_390b8f6c",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-08-25T01:31:32Z",
      "side": 1,
      "message": "It\u0027s could be changed by customer.\nDue to their system might be have one more watchdogs.\nHowever, they might be use watchdog1 or watchdog2 for their BMC system.",
      "parentUuid": "6826be6c_197f89f1",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79adc660_19beadf6",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 100,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T11:45:57Z",
      "side": 1,
      "message": "Shouldn\u0027t we make it a json file then?  Or something picked up from an entity-manager config?",
      "parentUuid": "de77d17f_390b8f6c",
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb3d600b_b36e350d",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-18T11:37:25Z",
      "side": 1,
      "message": "Why would we ever need to change these?",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 1
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a12e338c_c5461497",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-08-25T01:31:32Z",
      "side": 1,
      "message": "Those changes are need for updating bmc reboot cause to dbus.\nAnd customer can just query this dbus property for their userspace application\nto know the reboot reason. Also want to make consistence with phosphor-state-manger.",
      "parentUuid": "eb3d600b_b36e350d",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 1
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e276a205_ada4e8e3",
        "filename": "meson_options.txt",
        "patchSetId": 6
      },
      "lineNbr": 114,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2021-08-25T11:45:57Z",
      "side": 1,
      "message": "\u003e Those changes are need for updating bmc reboot cause to dbus.\n\nBut is there any value in making them configurable at build time?  This are literals from the dbus schema.\n\n\u003e Also want to make consistence with phosphor-state-manger.\n\nI guess this is up to the maintainer of this repository to decide.  My opinion is there are WAY WAY WAY too many build-configuration options in this repository.  The repository has been around for a while and I don\u0027t think there is a single example of a meta-layer leveraging any of these options.\n\nMeson options should not be turned into a replacement for #define.",
      "parentUuid": "a12e338c_c5461497",
      "range": {
        "startLine": 104,
        "startChar": 0,
        "endLine": 114,
        "endChar": 1
      },
      "revId": "49cc5c40797f992cc03687ecf98e311f043f733b",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    }
  ]
}