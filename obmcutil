#!/bin/sh

USAGE="Usage: obmcutil [-h]
		{bmcstate,chassisstate,hoststate,state,status}"

SERVICE_ROOT=xyz.openbmc_project
SERVICE_CONTROL=$SERVICE_ROOT.State

OBJECT_ROOT=/xyz/openbmc_project
OBJECT_CONTROL=$OBJECT_ROOT/state

print_help ()
{
	echo "$USAGE"
	echo ""
	echo "positional arguments:"
  	echo "  {bmcstate,chassisstate,hoststate,state,status}"
	echo ""
	echo "optional arguments:"
  	echo "  -h, --help          show this help message and exit"
}

call ()
{
	busctl $1 | cut -d '"' -f2
}

get_property ()
{
	call "get-property $1 $2 $3 $4"
}

state_query ()
{
	STATE=$(get_property $1 $2 $3 $4)
	printf "%-20s: %s\n" $4 $STATE
}

parse_arg ()
{
	case "$1" in
		bmcstate)
			OBJECT=$OBJECT_CONTROL/bmc0
			SERVICE=$(mapper get-service $OBJECT)
			INTERFACE=$SERVICE
			PROPERTY=CurrentBMCState
			state_query $SERVICE $OBJECT $INTERFACE $PROPERTY
			;;
		chassisstate)
			OBJECT=$OBJECT_CONTROL/chassis0
			SERVICE=$(mapper get-service $OBJECT)
			INTERFACE=$SERVICE
			PROPERTY=CurrentPowerState
			state_query $SERVICE $OBJECT $INTERFACE $PROPERTY
			;;
		hoststate)
			OBJECT=$OBJECT_CONTROL/host0
			SERVICE=$(mapper get-service $OBJECT)
			INTERFACE=$SERVICE
			PROPERTY=CurrentHostState
			state_query $SERVICE $OBJECT $INTERFACE $PROPERTY
			;;
		state|status)
			for query in bmcstate chassisstate hoststate
			do
				parse_arg $query
			done
			;;
		-h|--help)
			print_help
			;;
		*)
			echo "ERROR: Invalid Choice: '$1'"
			echo "$USAGE"
			;;
	esac
}

parse_arg $1
