{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "05f36883_46c087e4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-07T18:10:12Z",
      "side": 1,
      "message": "No serious concerns.",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f240586d_1300796e",
        "filename": "meson.options",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-07T18:10:12Z",
      "side": 1,
      "message": "Do you want this disabled by default?",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5670a99c_63d3ed8a",
        "filename": "meson.options",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-08T02:38:02Z",
      "side": 1,
      "message": "I want to set this feature to disabled by deafult to avoid impact to other platforms that follow old implementation.",
      "parentUuid": "f240586d_1300796e",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9c3a32fa_a634d599",
        "filename": "meson.options",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-12T15:01:16Z",
      "side": 1,
      "message": "This should ideally be taken care of in the Yocto recipe.  Our default policy is that the maximal code should be enabled in CI so that we get adequate testing at a repository level and don\u0027t see breaks in compile later on at a system level.",
      "parentUuid": "5670a99c_63d3ed8a",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "65d17a9b_705d895e",
        "filename": "meson.options",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-13T02:37:30Z",
      "side": 1,
      "message": "@Patrick,Thank you for your sharing.\n\n@Andrew, I updated the default value of `check-fwupdate-before-do-transition` to `enabled` in this repo. I will disable this option by default in the .bb file later.",
      "parentUuid": "9c3a32fa_a634d599",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28c647ab_a1efa85a",
        "filename": "meson.options",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-11-13T16:13:38Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "65d17a9b_705d895e",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e262bcdf_c18118f5",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-07T18:10:12Z",
      "side": 1,
      "message": "Is there any way to know if this activation is appropriate for this device?  For multi-host, we can be updating one compute card while another compute card is asking for a reboot.  This code currently just looks for any ActivationBlocksTransition.",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56d0e91b_e297150e",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-08T02:38:02Z",
      "side": 1,
      "message": "Unfortunately, the `Purpose` property of the https://github.com/openbmc/phosphor-dbus-interfaces/blob/master/yaml/xyz/openbmc_project/Software/Version.interface.yaml interface does not show the Host\u0027s Index. I do not know any way to get the Host\u0027s Index when a firmware is flashed.",
      "parentUuid": "e262bcdf_c18118f5",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55fcdba1_0341da60",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-11-12T15:01:16Z",
      "side": 1,
      "message": "Aren\u0027t there intended to be associations?  @Jagpal?",
      "parentUuid": "56d0e91b_e297150e",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8d1646f5_f2650c9e",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-21T07:32:09Z",
      "side": 1,
      "message": "I tried to investigate the Associations, but I do not see any kind of association show the relation between Firmware and Host\u0027s index.\n\nBeside that, the MANIFEST file inseide the .tar file does not includes the Host Index information, I do not think that we can know the Host\u0027s index from the updating action.",
      "parentUuid": "55fcdba1_0341da60",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "587209c9_565dd862",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-25T05:58:15Z",
      "side": 1,
      "message": "@Patrick There are no direct associations which can give SlotNumber, there can be a indirect way by figuring out the association from ActivationBlocksTransition -\u003e InventoryItem --which on same path should have -\u003e SlotNumber decorator. If this doesn\u0027t exist, then by default it should be a single slot system.",
      "parentUuid": "8d1646f5_f2650c9e",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4340e3cd_8ab79966",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-27T15:11:47Z",
      "side": 1,
      "message": "@Jagpal, thank you for your suggestion. I found out that ItemUpdater defined an association of type {activation,item} between the Inventory.Item and Software.Activation under /xyz/openbmc_project/software/\u003cid\u003e https://github.com/openbmc/phosphor-dbus-interfaces/tree/master/yaml/xyz/openbmc_project/Software#itemupdater. But it seems that phosphor-image-updater did not create this association. \n\n@Patrick, Can we accept this is a limitation of current design and merge this commit?",
      "parentUuid": "587209c9_565dd862",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec96451c_69bb96c5",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001758
      },
      "writtenOn": "2024-11-27T19:04:45Z",
      "side": 1,
      "message": "@Thang, The new Code Update design is at https://github.com/openbmc/docs/blob/master/designs/code-update.md#association. There is a proposed association activating, activated_on which needs to be implemented.\nSo, my suggestion is for you to go ahead with this patch and i can raise a patch new week to implement this association in phosphor-bmc-code-mgmt. Once that is done you can raise a flow up patch in phosphor-state-manager. Please let me know if there are any concerns?",
      "parentUuid": "4340e3cd_8ab79966",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a796c973_b9d5476b",
        "filename": "utils.cpp",
        "patchSetId": 2
      },
      "lineNbr": 286,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-12-02T03:15:16Z",
      "side": 1,
      "message": "@Jagpal, Thank you for your information.\n\n@Patrick, I think this patch is ready to merge. I will create another commit to support checking Host\u0027s Index later.",
      "parentUuid": "ec96451c_69bb96c5",
      "revId": "906b21421021b17f687a822689c1e924f593ff35",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}