{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "28affd32_a5c8edf1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T14:09:10Z",
      "side": 1,
      "message": "The bmcweb logic over in https://github.com/openbmc/bmcweb/blob/master/redfish-core/lib/managers.hpp#L2121 will also need to be updated to look for this new state.",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "278b3c00_1755fe44",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-07T07:51:31Z",
      "side": 1,
      "message": "Do you mean that the `asyncResp-\u003eres.jsonValue[\"Status\"][\"State\"]` property should be set to `Updating`?",
      "parentUuid": "28affd32_a5c8edf1",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a4453d32_90cdbd6c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-07T13:31:42Z",
      "side": 1,
      "message": "Yeah, we\u0027ll want the Redfish API to correctly report when the BMC state is updating.",
      "parentUuid": "278b3c00_1755fe44",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47742b5d_44821dec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-08T06:55:06Z",
      "side": 1,
      "message": "I see that we have a discussion about how to update this property https://discord.com/channels/775381525260664832/1027583818783264841, should we change this one?",
      "parentUuid": "a4453d32_90cdbd6c",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8c8f981_c4bb6310",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-13T10:12:47Z",
      "side": 1,
      "message": "About the bmcweb, I think we can update is later. I believe this commit does not change the behavior of bmcweb.",
      "parentUuid": "47742b5d_44821dec",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7bea285_cb674cea",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T14:09:10Z",
      "side": 1,
      "message": "The ambiguity to me is that I felt like when the BMC State is UpdateInProgress, then that means the BMC flash itself is being updated. If we\u0027re updating host firmware, or some other flash chip in the system, we don\u0027t want the BMC state to go to UpdateInProgress.",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c388c394_fc567a9d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-07T07:51:31Z",
      "side": 1,
      "message": "I asked your concern on the Discord to get more view. https://discord.com/channels/775381525260664832/775381525260664836/1270596296474103859",
      "parentUuid": "f7bea285_cb674cea",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0c40df7_a038afbd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-07T13:31:42Z",
      "side": 1,
      "message": "üëç",
      "parentUuid": "c388c394_fc567a9d",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3631df8_ec6c10a2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-08T06:55:06Z",
      "side": 1,
      "message": "I seem that when BMC is updating BIOS firmwares, the BMC\u0027s state can be set to UpdateInProgress, but not all of them need to change this. But I think we should make a common solution for all of them to make more safe for system.",
      "parentUuid": "f0c40df7_a038afbd",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4b115b5b_b4cc3a87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-13T10:12:47Z",
      "side": 1,
      "message": "I think that we can use ActivationBlocksTransition interface to indicate that the BMC is in Update mode.",
      "parentUuid": "f3631df8_ec6c10a2",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34e6aaa1_ddf800e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-13T18:54:55Z",
      "side": 1,
      "message": "I\u0027m not sure we\u0027ve resolved this one yet. A quick grok shows this interface is added for PSU code update, PNOR code updates, and BMC code updates. I understand why PSU and PNOR want to block BMC reboots during this time (avoid corruption of the devices) but the BMC itself is not being updated during those steps so we shouldn\u0027t say the BMC state is UpdateInProgress. Is there something specific we can look up to know that the BMC itself is being updated?\nhttps://grok.openbmc.org/search?full\u003d%22xyz.openbmc_project.Software.ActivationBlocksTransition%22\u0026defs\u003d\u0026refs\u003d\u0026path\u003d\u0026hist\u003d\u0026type\u003d\u0026xrd\u003d\u0026nn\u003d1\u0026si\u003dfull\u0026searchall\u003dtrue\u0026si\u003dfull",
      "parentUuid": "4b115b5b_b4cc3a87",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6feb4078_aa6f7afa",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-14T02:45:53Z",
      "side": 1,
      "message": "The phosphor-bmc-code-mgmt is creating ActivationBlocksTransition interface to prevent reboot action while copying `img-*` files from `/tmp/images` folder to `/run/initramfs` folder if user request to flash new BMC https://github.com/openbmc/phosphor-bmc-code-mgmt/blob/master/static/flash.cpp#L54. BMC does not write data to itself flash until user request BMC rebooting. During copying time, I think the BMC could be set to Update Mode.\n\nWhen users reboot BMC, the BMC looks for `/run/initramfs/img-\u003cbmc|kernel|ubbot-|...\u003e` files, if those files are available, BMC flashes they to according to `mtd-*` devices https://github.com/openbmc/openbmc/blob/master/meta-phosphor/recipes-phosphor/initrdscripts/files/obmc-shutdown.sh#L40. This is how BMC is flashing itself.",
      "parentUuid": "34e6aaa1_ddf800e5",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5fb54fd0_d6fdfc15",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2024-08-15T18:32:26Z",
      "side": 1,
      "message": "That flow applies to systems with a single BMC version. Other configurations support dual versions and instead of writing to the BMC flash on reboot, the BMC writes to the alternate version without being rebooted.",
      "parentUuid": "6feb4078_aa6f7afa",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f992f3e8_add1c0a7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-16T02:45:55Z",
      "side": 1,
      "message": "Hi @Adriana, I just want to make clearly how to BMC flashes itself, why do we need to prevent BMC reboot action during the copying image-* files.",
      "parentUuid": "5fb54fd0_d6fdfc15",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3630500_f1cb3923",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2024-08-16T14:16:45Z",
      "side": 1,
      "message": "Copying to /run/initramfs is like writing to flash, because on reboot whatever is on /run/initramfs will be written to flash. Therefore if the copy is interrupted and only a partial image-u-boot file is copied for example, that partial file will be written during the reboot and corrupt the BMC, same as if a write operation to the flash was interrupted.",
      "parentUuid": "f992f3e8_add1c0a7",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e5886de7_9a727ef4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000003
      },
      "writtenOn": "2024-08-16T14:16:58Z",
      "side": 1,
      "message": "\u003e During copying time, I think the BMC could be set to Update Mode.\n\nI\u0027m trying to understand this comment. Is the proposal that the code update app, when it starts a BMC activation, sets the BMC state to \"UpdateInProgress\"?",
      "parentUuid": "f3630500_f1cb3923",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bd5328e_bdeea8ac",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-16T16:13:11Z",
      "side": 1,
      "message": "I means while copying files to /run/initramfs, BMC\u0027s state should be set to \"UpdateInProgress\"",
      "parentUuid": "e5886de7_9a727ef4",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96651550_de747b9e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-19T16:53:38Z",
      "side": 1,
      "message": "We have examples of doing this elsewhere with the chassis and host (poweringOn/poweringOff) being set via a service in the corresponding systemd targets. But the issue is when the code update is done, we kind of need to re-run the discovery logic (to discover if we\u0027re NotReady or Quiesced). There\u0027s currently no way to trigger that logic externally (other then restarting bmc state manager).\n\nI\u0027m starting to wonder if we\u0027re overthinking this and the better direction is to just treat the BMC state (in regards to UpdateInProgress) to just be set anytime the BMC is doing any type of firmware update to any device. So we could update the PDI to indicate this and see how that review goes. Then we can just go with the original code here and set it whenever any update event occurs on d-bus.",
      "parentUuid": "6bd5328e_bdeea8ac",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d166afd_3bcce6a4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-20T09:21:12Z",
      "side": 1,
      "message": "I created new commit in the PDIs to update UpdateInProgress \n value, please take a look https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/73845",
      "parentUuid": "96651550_de747b9e",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c48b803_c44fcd67",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-07T13:31:42Z",
      "side": 1,
      "message": "Thanks for working on this Thang. It\u0027s always been on the TODO list to get that state properly supported.",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6eca7bc_94dc88f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-08T06:55:06Z",
      "side": 1,
      "message": "Make OpenBmc better day by day üòÑ",
      "parentUuid": "5c48b803_c44fcd67",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeea8081_0e048f45",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T14:09:10Z",
      "side": 1,
      "message": "Is this interface only when a BMC update is occurring or could it be any type of firmware update?",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ae330c18_a0397a45",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-07T08:53:43Z",
      "side": 1,
      "message": "I see that any type of firmware update is creating that interface.",
      "parentUuid": "eeea8081_0e048f45",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "775c22aa_8cd6aa63",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 136,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-08T06:55:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae330c18_a0397a45",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cdb1673_5d1bfdda",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T14:09:10Z",
      "side": 1,
      "message": "We\u0027ll need to redetect this. What if BMC was in NotReady or Quiesced prior to start of code update? Or went to Quiesce during update. Can hopefully just call discoverInitialState()",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27383a50_60c971fb",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-07T07:51:31Z",
      "side": 1,
      "message": "I will update this point",
      "parentUuid": "5cdb1673_5d1bfdda",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "040d2c9c_9d1442e9",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 1
      },
      "lineNbr": 155,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-08T06:55:06Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "27383a50_60c971fb",
      "revId": "4e92ac3409afcdc956aae440fb6a6644b15fc71c",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}