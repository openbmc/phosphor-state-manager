{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "58982658_3c8bcb01",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T12:49:50Z",
      "side": 1,
      "message": "nit: I know we\u0027re just trying to copy paste here from the spec but no reason we can\u0027t just line wrap at 72 chars here to keep the commit message cleaner.",
      "range": {
        "startLine": 19,
        "startChar": 71,
        "endLine": 19,
        "endChar": 75
      },
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6984c40c_70218c92",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-30T22:05:27Z",
      "side": 1,
      "message": "A few nits, but generally all correct.",
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "515aaf15_49789fec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-08-06T08:04:03Z",
      "side": 1,
      "message": "LGTM",
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87e2ebe6_35361b2b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-08-06T12:49:50Z",
      "side": 1,
      "message": "Thanks for the fixes Amithash. I\u0027ll let you decide what you want to do with the remaining \"nit\" comments.",
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c315b79a_64b91437",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 46,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-30T22:05:27Z",
      "side": 1,
      "message": "Using a dbus interface name as the base part of the service name isn\u0027t an intentional design point, but this is effectively what was already being done, so I think we can leave that as-is now.",
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d99fc719_01e8312a",
        "filename": "host_state_manager_main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 49,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-30T22:05:27Z",
      "side": 1,
      "message": "nit (since this was already done this way):\n\nIt is better to use `sdbusplus::object_path(HostState::namespace_path) / (...::host + std::to_string(hostId))`.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 49,
        "endChar": 46
      },
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6bfcbb98_52846288",
        "filename": "scheduled_host_transition.cpp",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-07-30T22:05:27Z",
      "side": 1,
      "message": "nit: `operator/` on `object_path` could be used here too.",
      "revId": "cd4e4ee5daf366fc3d83c404d0cd0ea1afcdba16",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}