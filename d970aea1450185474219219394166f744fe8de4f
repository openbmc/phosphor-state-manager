{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "122db244_36696f0e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-11T14:38:06Z",
      "side": 1,
      "message": "Hi @Andrew and @Tim, I add this commit fix the issue we discussed before https://gerrit.openbmc.org/c/openbmc/phosphor-state-manager/+/74319/comments/39da96e1_0359d8a7",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a0bcfd35_24537304",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-10-14T06:27:03Z",
      "side": 1,
      "message": "Hi @Thang,\nFrom the IPMI Specification v2.0 revision 1.1. \"The power restore policy determines how the system or chassis behaves when AC power returns after an AC power loss.\"\n\nIt seems both `Watchdog` and `Software` are not caused by AC power loss like `PinholeReset`.\nTherefore, checking the `PinholeReset` reason and not running power restore policy seems reasonable.\n\nSince it is a manual mechanism for the user to force a hard reset to the BMC in situations where it is hung or not responding, should we keep the hard reset `PinholeReset` and remove the software reset regardless of whether it is Watchdog or Software?\n\nHi @Andrew,\nIf I am wrong, please correct me. Thanks.",
      "parentUuid": "122db244_36696f0e",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6d25b3c6_c380df70",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2024-10-15T02:31:00Z",
      "side": 1,
      "message": "I think Thang Tran is wrong on the commit title and message. The change he made is for BMC reboot cause but the title and message say about Power Restore Policy. They are different features.",
      "parentUuid": "a0bcfd35_24537304",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "03ad382e_fdde3224",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-10-15T02:38:38Z",
      "side": 1,
      "message": "According to Thang\u0027s change, it seems that when RebootCause is Software or Watchdog then return 0 and does not apply any power restore policy. So, I think he wants to connect with them.",
      "parentUuid": "6d25b3c6_c380df70",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b73ce5d7_4ae24c93",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-15T04:28:33Z",
      "side": 1,
      "message": "\u003e Since it is a manual mechanism for the user to force a hard reset to the BMC in situations where it is hung or not responding, should we keep the hard reset PinholeReset and remove the software reset regardless of whether it is Watchdog or Software?\n\n@Tim, I think the APR only should be run when AC loss, other case like PinholeReset/Software/Watchdog, BMC does nothing.\n\na @Thang, I will update the commit message",
      "parentUuid": "03ad382e_fdde3224",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "442cf76d_7cbac28b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-10-15T06:21:12Z",
      "side": 1,
      "message": "Due to I read the power-recovery.md about blackout, so I think that PinholeReset simulate AC loss.\n\n\"A blackout occurs when AC power is cut from the system, resulting in a total loss of power if there is no UPS installed to keep the system on. To identify this scenario after a BMC reboot, chassis-state-manager will check to see what the last power state was before the loss of power and compares it against the pgood pin. Blackouts can be intentionally triggered by a user (i.e a pinhole reset)\n\"\n\nShould add the other resets description in this remark?\nhttps://github.com/openbmc/phosphor-state-manager/blob/master/discover_system_state.cpp#L82",
      "parentUuid": "b73ce5d7_4ae24c93",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b854d0d3_1185389a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-15T06:35:52Z",
      "side": 1,
      "message": "In the https://github.com/openbmc/docs/blob/master/designs/power-recovery.md#bmc-and-system-recovery-paths-1, it mentions that `If the power recovery software sees the PinholeReset reason within the RebootCause then it will not implement any of its policy`. Therefore, if the RebootCause is `PinholeReset`, the BMC should do nothing.",
      "parentUuid": "442cf76d_7cbac28b",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f120e91e_fb822468",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-10-15T06:51:30Z",
      "side": 1,
      "message": "So this description need to change also, right?\n```If the power recovery software sees the PinholeReset, Software or Watchdog...\nTherefore, if the RebootCause is PinholeReset, Software or Watchdog, the BMC should do nothing.```",
      "parentUuid": "b854d0d3_1185389a",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87d38496_c2356815",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-15T07:00:23Z",
      "side": 1,
      "message": "I agree with you @Tim.\n@Andrew, what do you think with the @Tim\u0027s suggestion.",
      "parentUuid": "f120e91e_fb822468",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f901b173_1874b993",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-10-15T15:04:11Z",
      "side": 1,
      "message": "Well, I\u0027m not sure. If the BMC reboots due to a watchdog (i.e. it hit some sort of catastrophic error causing it to reboot) and during that, the chassis and host crash and power off. When the BMC comes back, why would we not want to run APR? Wouldn\u0027t the system owner want the system to auto power back on in this situation? If the host and chassis remain running during that BMC watchdog reboot, then APR wont run anyway.",
      "parentUuid": "87d38496_c2356815",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47012a4b_72ca869e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-10-16T00:58:18Z",
      "side": 1,
      "message": "Hi @Adnrew,\nSo, should we keep the hard reset PinholeReset not run APR and run APR for the software reset regardless of whether it is Watchdog or Software? I\u0027m not sure if I understand your point. Please correct me, if I\u0027m wrong. Thanks.",
      "parentUuid": "f901b173_1874b993",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1fa39615_968b571e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-16T04:24:28Z",
      "side": 1,
      "message": "Hi @Andrew and @Tim, I provide a list of behaviors of BMC after reboot as below:\n- PinholeReset: Do not run APR.\n- Software: Do not run APR.\n- Watchdog: Run APR if Host is OFF (consider to mix this case with the only-run-apr-on-power-loss option).\n- POR: Run APR.\n- Unknown: Run APR if Host is OFF.",
      "parentUuid": "47012a4b_72ca869e",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1528396d_9059acda",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-10-16T19:38:41Z",
      "side": 1,
      "message": "From our customers perspective, if the following were to occur:\n\nSystem is booted and host is powered on\nBMC is rebooted (due to Software or Watchdog)\nWhen BMC comes back, host is powered off (for whatever reason)\nCustomer Expects APR To Run\n\nIs this not the case for you?",
      "parentUuid": "1fa39615_968b571e",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc1a0085_41d45c00",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-17T02:30:06Z",
      "side": 1,
      "message": "Hi @Andrew, We did not meet this request from customers.\n\nAs @Tim mentioned before \"The power restore policy determines how the system or chassis behaves when AC power returns after an AC power loss\". Besides that, in the Redfish specification, the PowerRestorePolicy property is described as \"The desired power state of the system when power is restored after a power loss\".\nIn both IPMI and Redfish specification, the APR should only be run when Power Loss. If the BMC reboots due to Software or Watchdog, the APR should not be run.\n\nI think we should follow the description of IPMI and Redfish specification.",
      "parentUuid": "1528396d_9059acda",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c41a322_d69a9784",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-25T07:35:05Z",
      "side": 1,
      "message": "Hi @Andrew, in the PDIs, the ARP can be run when Power Loss or BMC reboot https://github.com/openbmc/phosphor-dbus-interfaces/blob/73c931fb942daa714bfff17e950b9d5622a25842/yaml/xyz/openbmc_project/Control/Power/RestorePolicy.interface.yaml#L1. But I see that in the current inplementation, the BMC always tunrs on the Host if the Policy is `AlwaysOn` even we enbaled `only-run-apr-on-power-loss` option or not (From your commit https://github.com/openbmc/phosphor-state-manager/commit/70b48f31368b8a23df152840bfc34d8805bef8ca).\n\nIt is inconsistent, could we update that code https://github.com/openbmc/phosphor-state-manager/blob/master/discover_system_state.cpp#L190",
      "parentUuid": "cc1a0085_41d45c00",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d856305c_d5d07e3c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-11-04T17:43:56Z",
      "side": 1,
      "message": "Ahh, this stuff is making my head hurt :) \nI think to a certain extent, the logic within this code is a subset of APR. i.e. It\u0027s been adjusted to handle a variety of use cases that have come up. Initially, AlwaysOn was only honored when a power cycle occurred, but then users came back and said that they had specific use cases where they expected the system to always try and power on, no matter what the situation. I\u0027m just not sure why we\u0027re tying software reboot reasons to our APR policy. APR wont run unless chassis power was on prior to the BMC reboot. in the end, I don\u0027t care why the BMC rebooted, if chassis power was on before the BMC reboot, and it\u0027s not on anymore, I want to run APR and honor the customers request to get the system back up and booted. The only exception to this is when the customer is in a recovery situation and has toggled the pinhole reset in the panel of the system.",
      "parentUuid": "3c41a322_d69a9784",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "346cc219_78569e4a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-11-05T02:55:06Z",
      "side": 1,
      "message": "Hi @Andrew,\n\nIf users want to turn on the Host after BMC rebooted in any situation, I think they should disabe `only-run-apr-on-power-loss` during build time and set the Power Policy to `AlwaysOn`. This approach makes the ARP more clearly.\nBeside that, I have another question, why do we have to use `checkACLoss` method instead `LastRebootCause` property to check the AC loss?",
      "parentUuid": "d856305c_d5d07e3c",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2be0d959_8a7050ed",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-10-13T16:15:08Z",
      "side": 1,
      "message": "I think it\u0027s time to update https://github.com/openbmc/docs/blob/master/designs/power-recovery.md for both of these (similar to what was done for PinholeReset) because I\u0027m not sure we want these. The argument seems to be to only run APR when something unexpected happens (like an AC loss) but I think some want the Always Power On option to be always run after a BMC reset.",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c0a8370a_540556d0",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-15T04:28:33Z",
      "side": 1,
      "message": "\u003e The argument seems to be to only run APR when something unexpected happens (like an AC loss) but I think some want the Always Power On option to be always run after a BMC reset.\n\n@Andrew, For the old implementation, I don\u0027t see any change the APR can be run after BMC cold reset. Do you know any platform want to run APR after BMC cold reset?",
      "parentUuid": "2be0d959_8a7050ed",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c8b751a_001fc59e",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2025-02-04T06:05:42Z",
      "side": 1,
      "message": "Hi @geissonator@yahoo.com, Do you have any update APR behavior? Thanks.",
      "parentUuid": "c0a8370a_540556d0",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "990681cf_faa68533",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-02-05T19:00:15Z",
      "side": 1,
      "message": "I don\u0027t think APR policy should be tied to the reason the BMC is rebooted. It just causes too many corner cases on systems because the RebootCause is not consistent across all systems.",
      "parentUuid": "5c8b751a_001fc59e",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5057ff3_ec4abb52",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-02-06T03:17:49Z",
      "side": 1,
      "message": "I think we should add one more build option to support running APR when BMC is rebooted. This approach satisfy all of requirements. Is it ok @geissonator@yahoo.com @chli30@nuvoton.com?",
      "parentUuid": "990681cf_faa68533",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26f66639_3d916cc4",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-02-06T22:23:46Z",
      "side": 1,
      "message": "Yeah, I\u0027d be ok if you use a build option for your logic. I think the other 2 in here (PinholeReset, and Watchdog) should also be behind build flags to stay consistent.",
      "parentUuid": "f5057ff3_ec4abb52",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7b3b0689_0d08fd3f",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2025-02-07T01:56:10Z",
      "side": 1,
      "message": "Yes, I\u0027d be okay with using a build option to stay consistent. Thanks.",
      "parentUuid": "26f66639_3d916cc4",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1601c4c5_b151509f",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-02-12T03:32:13Z",
      "side": 1,
      "message": "Hi @geissonator@yahoo.com \u0026 @chli30@nuvoton.com,\nI update checking bmcRebootCase under \"only-run-apr-on-power-loss\" option. By default, BMC only runs APR when Power Loss (As mention in the Redfish and IPMI specification).\nIf you want to run APR when both BMC reboot and Power Loss cases, you have to disable \"only-run-apr-on-power-loss\" option. Is it ok with your case @geissonator@yahoo.com?",
      "parentUuid": "7b3b0689_0d08fd3f",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb77d3b5_ef7fb045",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-02-15T17:23:34Z",
      "side": 1,
      "message": "I\u0027m not really seeing how those correlate. Lets leave the run-apr-on-power-loss check where it is and do what we discussed above, new compile options for checking the different types of BMC reboots.",
      "parentUuid": "1601c4c5_b151509f",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59bd1e55_f62dec10",
        "filename": "discover_system_state.cpp",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2025-02-17T02:45:18Z",
      "side": 1,
      "message": "Hi @geissonator@yahoo.com,\nWhen I try to define new build option, I realize that `only-run-apr-on-power-loss` option is used to prevent BMC run APR when users reboot BMC (https://github.com/openbmc/phosphor-state-manager/blob/master/meson.options#L119). \nBut the current implementation is checking `checkACLoss` after handling `Always-on` policy. BMC always run APR after reboot if the power policy is `Always-on` even users enabled `only-run-apr-on-power-loss`.\nThat why I move checking Power status before policy handing and remove redundat `checkACLoss` checking. I think we don\u0027t have to define new build option while `only-run-apr-on-power-loss` already exit.",
      "parentUuid": "bb77d3b5_ef7fb045",
      "revId": "d970aea1450185474219219394166f744fe8de4f",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}