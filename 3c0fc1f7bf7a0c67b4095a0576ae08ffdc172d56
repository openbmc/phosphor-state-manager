{
  "comments": [
    {
      "key": {
        "uuid": "7f389abc_901e95c7",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 13
      },
      "lineNbr": 265,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2021-09-10T09:34:59Z",
      "side": 1,
      "message": "Hi Tim,\nDo we need to enable any kernel config to make this work? In my system it always return 0",
      "revId": "3c0fc1f7bf7a0c67b4095a0576ae08ffdc172d56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af98ada_c67cc417",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 13
      },
      "lineNbr": 265,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-09-10T09:47:19Z",
      "side": 1,
      "message": "Hi Thang Q. Nauyen,\nYou need to enable this configuration CONFIG_WATCHDOG_SYSFS.\nThis configuration can read different watchdog information through sysfs. Thanks.",
      "parentUuid": "7f389abc_901e95c7",
      "revId": "3c0fc1f7bf7a0c67b4095a0576ae08ffdc172d56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1bf571c3_27ba0810",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 13
      },
      "lineNbr": 265,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2021-09-10T11:59:21Z",
      "side": 1,
      "message": "I already have this config enabled.\n\nroot@mtjade:~# zcat /proc/config.gz | grep CONFIG_WATCHDOG_SYSFS\nCONFIG_WATCHDOG_SYSFS\u003dy",
      "parentUuid": "7af98ada_c67cc417",
      "revId": "3c0fc1f7bf7a0c67b4095a0576ae08ffdc172d56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fdd6f3b_b6ca90f6",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 13
      },
      "lineNbr": 265,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2021-09-11T08:44:06Z",
      "side": 1,
      "message": "Did you have implemented your own platform watchdog driver?\nThe watchdog driver need to update wdd-\u003ebootstatus according your platform.\nThus, you can check whether is watchdog driver on your platform first.",
      "parentUuid": "1bf571c3_27ba0810",
      "revId": "3c0fc1f7bf7a0c67b4095a0576ae08ffdc172d56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c417161_33cb01ae",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 13
      },
      "lineNbr": 265,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2021-09-11T14:36:30Z",
      "side": 1,
      "message": "No, Tim. I have not implemented anything. Currently I check the SCU_SYS_EXT_RESET_FLAG in u-boot for reset reason and update command line (/proc/cmdline) for reset reason. Then use it to decide if initializing platform GPIOs (when BMC is booted from A/C) and prevent chassis power policy applied when BMC rebooted.\nI think I can replace my current implementation by your approach so I asked you on how can I have /sys/class/watchdog/watchdog0/bootstatus with reset cause information",
      "parentUuid": "1fdd6f3b_b6ca90f6",
      "revId": "3c0fc1f7bf7a0c67b4095a0576ae08ffdc172d56",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4",
      "unresolved": false
    }
  ]
}