{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dfa18bea_d0f64581",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-02T10:28:28Z",
      "side": 1,
      "message": "@AndrewG - Can you review discover_system_state.cpp (as Thang pointed out) and let us know what the desired behavior is?  It isn\u0027t clear to me why Watchdog is listed as \"cold reset\" in the info message there.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a2fb626_bbee59cc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-10-02T19:42:53Z",
      "side": 1,
      "message": "Our systems only support the \"PinholeReset\" path so I went with that commit because I assumed it was how other non-IBM systems were supposed to behave.\n\nHigh level, since there is an APR policy to AlwaysOn, and we only run it when chassis power is off, we want to lean towards running APR in most cases.\n\nSounds like we need to revisit that commit Thang. A \"Watchdog\" reason doesn\u0027t seem to match well with a \"cold reset\". And it doesn\u0027t sound like other systems want to skip APR in this path.",
      "parentUuid": "dfa18bea_d0f64581",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82331b1e_80608d39",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-03T02:58:37Z",
      "side": 1,
      "message": "\u003e why Watchdog is listed as \"cold reset\" in the info message there\n\nIn the \"old design\", when users call \"ipmitool mc reset cold\" or reboot commands, the /sys/class/watchdog/watchdog0/bootstatus is set to WDIOF_EXTERN1, therefore the lastRebootCause property is set to `Watchdog` in those cases.",
      "parentUuid": "8a2fb626_bbee59cc",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 15,
        "endChar": 44
      },
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f28fc4dd_a3e3b2a5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-09-24T07:02:10Z",
      "side": 1,
      "message": "Hi Andrew,\nCould you help to re-trigger this commit and review after below commit be merged? Thanks. https://gerrit.openbmc.org/c/openbmc/phosphor-dbus-interfaces/+/74318\n\nWe\u0027ve followed and tested according new design as below:\nhttps://gerrit.openbmc.org/c/openbmc/docs/+/73678 (merged)\n\nTested:\n```\nPower ON:\nroot@evb-npcm845:~# cat /sys/class/watchdog/watchdog0/bootstatus\n0\nroot@evb-npcm845:~# busctl get-property xyz.openbmc_project.State.BMC \\\n/xyz/openbmc_project/state/bmc0 \\\nxyz.openbmc_project.State.BMC LastRebootCause\ns \"xyz.openbmc_project.State.BMC.RebootCause.POR\"\n\nWatchdog:\nroot@evb-npcm845:~# echo c \u003e /proc/sysrq-trigger\nroot@evb-npcm845:~# cat /sys/class/watchdog/watchdog0/bootstatus\n32\nroot@evb-npcm845:~# busctl get-property xyz.openbmc_project.State.BMC \\\n/xyz/openbmc_project/state/bmc0 \\\nxyz.openbmc_project.State.BMC LastRebootCause\ns \"xyz.openbmc_project.State.BMC.RebootCause.Watchdog\"\n \nSoftware:\nroot@evb-npcm845:~# reboot\nroot@evb-npcm845:~# cat /sys/class/watchdog/watchdog0/bootstatus\n4\nroot@evb-npcm845:~# busctl get-property xyz.openbmc_project.State.BMC \\\n/xyz/openbmc_project/state/bmc0 \\\nxyz.openbmc_project.State.BMC LastRebootCause\ns \"xyz.openbmc_project.State.BMC.RebootCause.Software\"\n```",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "39da96e1_0359d8a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-09-30T15:13:00Z",
      "side": 1,
      "message": "Thang, you did https://gerrit.openbmc.org/c/openbmc/phosphor-state-manager/+/51436, could you confirm you\u0027re ok with this change?",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6dc61265_d200065e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000940
      },
      "writtenOn": "2024-10-01T05:30:00Z",
      "side": 1,
      "message": "Hi Thang Tran,\nPlease help me check and update information",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "424afffa_4ca5a4d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-02T06:36:47Z",
      "side": 1,
      "message": "Until the driver is updated, it seems that the https://gerrit.openbmc.org/c/openbmc/phosphor-state-manager/+/51436 commit works incorrect.\nBesides that, we have to add one more condition to cover the `RebootCause::Software` value in the `discover_system_state.cpp` file.",
      "parentUuid": "39da96e1_0359d8a7",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "06c2f737_96eece6d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-02T10:26:29Z",
      "side": 1,
      "message": "What driver?  A downstream one?  We shouldn\u0027t be holding up upstream work for a downstream driver.",
      "parentUuid": "424afffa_4ca5a4d2",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d36b581_e34ca479",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001198
      },
      "writtenOn": "2024-10-03T02:58:37Z",
      "side": 1,
      "message": "I mean the Watchdog driver from Aspeed/Nuvoton.",
      "parentUuid": "06c2f737_96eece6d",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8bd485a_916de30f",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-09-26T13:26:21Z",
      "side": 1,
      "message": "I\u0027m still struggling a bit with the backwards compatibility aspect of this change. For this new code to work, it requires a kernel driver update from both Nuvoton and Aspeed right? Do we list that as a pre-req to this change? Will it work on all versions of our BMC chips?",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9e51625_881df6d8",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-26T16:22:40Z",
      "side": 1,
      "message": "There is not currently an upstream driver that exposes the WD information correctly anyhow, so I don\u0027t think we have to worry about backwards compatiblity. Do we?\n\nThe only previous driver that created the WDIOF fields was in the Nuvoton fork.  They\u0027re going to update the driver to conform to this.",
      "parentUuid": "f8bd485a_916de30f",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f670a06f_77c37800",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-09-27T01:33:43Z",
      "side": 1,
      "message": "@Andrew, thanks for your question.\nIndeed, it requires a kernel driver update from both Nuvoton and Aspeed. Before this commit, we\u0027ve discussed with WW/Aspeed. Aspeed will follow the new design and we\u0027ve provided our driver for they reference.\n\nAs @Patrick said that we\u0027re going to upstream this driver. Thanks.\n\nhttps://github.com/Nuvoton-Israel/linux/commit/da8d894b50a80352c8513906c2b62b23598220d7\n\n```\nTested with above driver and commit #74318 and #74319:\nBootstatus (DEC)\tLastRebootCause\n0\t               \"xyz.openbmc_project.State.BMC.RebootCause.POR\"\n4\t               \"xyz.openbmc_project.State.BMC.RebootCause.Software\"\n32\t              \"xyz.openbmc_project.State.BMC.RebootCause.Watchdog\"\n```",
      "parentUuid": "a9e51625_881df6d8",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3c0d41c0_a4057f6e",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2024-10-02T15:43:15Z",
      "side": 1,
      "message": "Hi @Tim,\n\nI haven\u0027t seen any watchdog driver updates following the new design from both Nuvoton and Aspeed (I\u0027m checking at https://github.com/openbmc/linux/tree/dev-6.6/drivers/watchdog)\n\nFollow https://github.com/openbmc/docs/blob/master/designs/bmc-reboot-cause-update.md#proposed-design , the driver set /sys/class/watchdog/watchdog0/bootstatus\n\u003d\u003e phosphor-state-manager get the flag from /sys/class/watchdog/watchdog0/bootstatus\n\nSo I think we need to wait for Aspeed/Nuvoton to complete the upstream watchdog driver with the new design, and then we\u0027ll support the phosphor-state-manager. \n\nThanks,\nChanh",
      "parentUuid": "f670a06f_77c37800",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f33a6ed_08f828fa",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-10-02T16:42:09Z",
      "side": 1,
      "message": "\u003e So I think we need to wait for Aspeed/Nuvoton to complete the upstream watchdog driver with the new design, and then we\u0027ll support the phosphor-state-manager.\n\nBut there isn\u0027t any support with the \"old design\" either.  So, is there harm in this?  The new design is at least following the overall Linux watchdog design.",
      "parentUuid": "3c0d41c0_a4057f6e",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c7f6c41a_2362d372",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2024-10-02T19:44:28Z",
      "side": 1,
      "message": "Yeah this seems like the crux of it, if there\u0027s nothing upstream then changes are fair game.",
      "parentUuid": "4f33a6ed_08f828fa",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc024c07_7e9dfb04",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 291,
      "author": {
        "id": 1000994
      },
      "writtenOn": "2024-10-03T03:22:53Z",
      "side": 1,
      "message": "Hi @Tim,\n\nDo you have any information from Aspeed\u0027s plan to upstream this support? I would like to follow that. If it\u0027s convenient, it\u0027s a pleasure to add me to this discussion.\n\nI\u0027m using the Aspeed chip, I can help review and test the upstream patch from Aspeed. I think it will help upstream progress quickly.\n\nThanks,\nChanh",
      "parentUuid": "c7f6c41a_2362d372",
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdbf5ad5_d48ca733",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2024-09-26T16:24:52Z",
      "side": 1,
      "message": "This is the only part that is potentially \"backwards compatible\" breaking because we\u0027re going to have all systems move from \"Unknown\" to \"POR\".  Currently no upstream code even uses this field, so I don\u0027t really see that as a major blocker.",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 297,
        "endChar": 52
      },
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "31df5a8e_9ed2786c",
        "filename": "bmc_state_manager.cpp",
        "patchSetId": 3
      },
      "lineNbr": 297,
      "author": {
        "id": 1000294
      },
      "writtenOn": "2024-09-27T01:33:43Z",
      "side": 1,
      "message": "Thanks for your time to review.",
      "parentUuid": "fdbf5ad5_d48ca733",
      "range": {
        "startLine": 296,
        "startChar": 0,
        "endLine": 297,
        "endChar": 52
      },
      "revId": "e14e96f8c61e650911f760f7b1e18c5f1db6852a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}