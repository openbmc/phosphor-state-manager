{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ea140877_9947e8f0",
        "filename": "service_files/obmc-power-start@.service",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-30T20:53:19Z",
      "side": 1,
      "message": "This one doesn\u0027t seem appropriate to me.  Almost no systems actually make this service outside of IBM.  Maybe we just patch it?\n\nWhy do we have 2 dependencies now?",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b607fae9_5647fef3",
        "filename": "service_files/obmc-power-start@.service",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-10-01T21:09:42Z",
      "side": 1,
      "message": "oh, I only added this one because I thought others were still using the skeleton implementation. All of our upstream IBM systems use the one hosted by phosphor-power-control so I\u0027m fine with just using that here.",
      "parentUuid": "ea140877_9947e8f0",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94bf2835_57e2f823",
        "filename": "service_files/obmc-power-start@.service",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-02T02:36:01Z",
      "side": 1,
      "message": "Uh... you have Romulus, Witherspoon, etc. all ported over to phosphor-power-control?  That\u0027s news to me.\n\nThis is a prime example to me of why the mapper call exists.  Only IBM uses phosphor-power-control also.  Right now I think most platforms are doing some hacky systemd.service append to cut out these dependencies and insert their own shell script, but with the new platform-init repo, I was hoping that most of that code could actually go there.\n\nI think we need to figure out a more consistent way to figure out \"where is the power control object(s) implemented\" if that\u0027s what are necessary.",
      "parentUuid": "b607fae9_5647fef3",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "be490085_a0cab7ea",
        "filename": "service_files/obmc-power-start@.service",
        "patchSetId": 1
      },
      "lineNbr": 8,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-10-07T19:16:31Z",
      "side": 1,
      "message": "Yeah, this discussion has convinced me that there is still merit in making mapper-wait continue to work. I believe I have a solution using Matt\u0027s new redundant BMC class to identify services that should only be run on the passive BMC (I can use it for the specific mapper-wait services that should only be run on the active). I will abandon this review. Thanks for the feedback.",
      "parentUuid": "94bf2835_57e2f823",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8f0de65_bc24d9e8",
        "filename": "service_files/phosphor-chassis-check-power-status@.service",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-30T20:53:19Z",
      "side": 1,
      "message": "I wonder if any (all?) of these can be eliminated now with dbus-activation?  Is the code doing direct dbus lookups or is it doing mapper lookups anyhow?  If we\u0027re doing direct dbus calls, then we can probably handle many of these through dbus activation.",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1b055de_99baefd0",
        "filename": "service_files/phosphor-chassis-check-power-status@.service",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-10-01T21:09:42Z",
      "side": 1,
      "message": "Currently we\u0027re still using mapper for the most part. I\u0027d prefer to tackle converting PSM over to dbus activation as a separate set of commits. I\u0027m still not totally sold on dbus-activation as it causes all sorts of issues when the service being activated is broken (i.e. it just keeps starting it over and over). Feel free to unresolve if you don\u0027t agree.",
      "parentUuid": "d8f0de65_bc24d9e8",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e51f0fc0_4b91d527",
        "filename": "service_files/phosphor-chassis-check-power-status@.service",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-10-02T02:36:01Z",
      "side": 1,
      "message": "I must be missing how explicit service dependencies is better than dbus-activation.  Don\u0027t they turn into the same thing?\n\nHonestly, I don\u0027t really like any of this \"move away from mapper\" but it seems like dbus-activation is at least slightly more replaceable than explicit service names because an implementation can provide a different service as the replacement for the \"well known service name\" (as you are effectively going that direction).",
      "parentUuid": "a1b055de_99baefd0",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d1477b3a_4574de16",
        "filename": "service_files/phosphor-chassis-check-power-status@.service",
        "patchSetId": 1
      },
      "lineNbr": 5,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-10-07T19:16:31Z",
      "side": 1,
      "message": "I verified that if I kill mapper twice, it does go to the fail state and the BMC goes to Quiesce (so my previous assumptions that dbus-activation caused services to endless restart was incorrect). The journal gets filled up with everyone trying to dbus-activate mapper but it correctly is not started. I\u0027m going to stick with mapper-wait (see above comment) and abandon this commit.",
      "parentUuid": "e51f0fc0_4b91d527",
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1510fd30_2893cc27",
        "filename": "service_files/phosphor-clear-one-time@.service",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2025-09-30T20:53:19Z",
      "side": 1,
      "message": "Is this actually done by Settings everywhere or is it done by the bios settings manager sometimes?",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 4,
        "endChar": 42
      },
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ddfccf44_ae86894c",
        "filename": "service_files/phosphor-clear-one-time@.service",
        "patchSetId": 1
      },
      "lineNbr": 4,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2025-10-01T21:09:42Z",
      "side": 1,
      "message": "To my knowledge AutoReboot is always phosphor-settings and a quick grep seems to confirm that. Let me know if you find something else.",
      "parentUuid": "1510fd30_2893cc27",
      "range": {
        "startLine": 3,
        "startChar": 0,
        "endLine": 4,
        "endChar": 42
      },
      "revId": "b82035f38ef9f99651c8a6ae86b3d88244f82a0a",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}