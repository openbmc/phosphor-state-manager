{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "b571a9dc_58cc2259",
        "filename": "chassis_state_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T14:29:13Z",
      "side": 1,
      "message": "Does this need to be modified?\n\nSERVICE --\u003e \"org.openbmc.control.PowerX\"\nOBJECT --\u003e \"/org/openbmc/control/powerX\"\n\nAnd X should be the chassis id?",
      "range": {
        "startLine": 108,
        "startChar": 8,
        "endLine": 108,
        "endChar": 67
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f632421_83cea95b",
        "filename": "chassis_state_manager.cpp",
        "patchSetId": 2
      },
      "lineNbr": 108,
      "author": {
        "id": 1000004
      },
      "writtenOn": "2022-03-15T19:50:38Z",
      "side": 1,
      "message": "This is still hosted out in our skeleton repo - https://grok.openbmc.org/xref/openbmc/skeleton/op-pwrctl/power_control_obj.c?r\u003dc0c74e7c.\n\nWe\u0027re going to need to update that to support pgood on multiple chassis or we\u0027re going to have to work with phosphor-power to get this out of skeleton and into a real repo.",
      "parentUuid": "b571a9dc_58cc2259",
      "range": {
        "startLine": 108,
        "startChar": 8,
        "endLine": 108,
        "endChar": 67
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e608094_44789f58",
        "filename": "chassis_state_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "Prefer an explicit default initialization:\n\n`size_t id \u003d 0;`",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45fca92e_612e84ba",
        "filename": "chassis_state_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "id will be assigned a value at constructor, do I still need a default value here?",
      "parentUuid": "6e608094_44789f58",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "325cc217_7f606091",
        "filename": "chassis_state_manager.hpp",
        "patchSetId": 2
      },
      "lineNbr": 226,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-17T01:45:06Z",
      "side": 1,
      "message": "Yes.  Also good to have a default initialization for any member so that if someone adds a new constructor variant and doesn\u0027t need to initialize it you end up with something sane.",
      "parentUuid": "45fca92e_612e84ba",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00d8fa89_39269ad3",
        "filename": "chassis_state_manager_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "Suggest adding a small condition here:\n\nif (0 \u003d\u003d chassisId) {\n    bus.request_name(CHASSIS_BUSNAME);\n}\n\nThis will allow us to facilitate backwards compatibility for a time until we can get all the services that are hardcoding State.Chassis fixed.",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "91b9c6e4_fca57237",
        "filename": "chassis_state_manager_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "00d8fa89_39269ad3",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3edb01b_74e32a72",
        "filename": "chassis_state_manager_main.cpp",
        "patchSetId": 2
      },
      "lineNbr": 43,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-16T03:01:32Z",
      "side": 1,
      "message": "I was misunderstand your comment.\nActually one service can request more than one busname, so chassis-state-manager should request both xyz.openbmc_project.State.Chassis \u0026 xyz.openbmc_project.State.Chassis0 if chassis id is 0, is it correct?\n\nI pushed the change in patch set 4, please let me know is it what you want.",
      "parentUuid": "91b9c6e4_fca57237",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a43d4011_0112b5df",
        "filename": "host_check.cpp",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "drop const",
      "range": {
        "startLine": 127,
        "startChar": 47,
        "endLine": 127,
        "endChar": 52
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3c8de65_ee405444",
        "filename": "host_check.cpp",
        "patchSetId": 2
      },
      "lineNbr": 127,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a43d4011_0112b5df",
      "range": {
        "startLine": 127,
        "startChar": 47,
        "endLine": 127,
        "endChar": 52
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7f52486_426ddca1",
        "filename": "host_check.cpp",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "drop const",
      "range": {
        "startLine": 158,
        "startChar": 19,
        "endLine": 158,
        "endChar": 24
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "194386b0_719efc9a",
        "filename": "host_check.cpp",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e7f52486_426ddca1",
      "range": {
        "startLine": 158,
        "startChar": 19,
        "endLine": 158,
        "endChar": 24
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9788a4dc_0da856b1",
        "filename": "host_check.hpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "Drop the const here.  There is no need for a const on a pass-by-value POD type (like integers, pointers, etc) and it doesn\u0027t even change the C++ name mangling.  It is just noise in the code.",
      "range": {
        "startLine": 16,
        "startChar": 19,
        "endLine": 16,
        "endChar": 24
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28b31cc3_2aa47994",
        "filename": "host_check.hpp",
        "patchSetId": 2
      },
      "lineNbr": 16,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "Agreed, Done",
      "parentUuid": "9788a4dc_0da856b1",
      "range": {
        "startLine": 16,
        "startChar": 19,
        "endLine": 16,
        "endChar": 24
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1f9d04f_85e57524",
        "filename": "service_files/xyz.openbmc_project.State.Chassis@.service",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "Isn\u0027t there an old file you started from on this?  Please do a \u0027git rm\u0027 on the old file so we can see the diffs.",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9aa58b5a_ce06f2d4",
        "filename": "service_files/xyz.openbmc_project.State.Chassis@.service",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T16:08:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1f9d04f_85e57524",
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d76e97b_5835971f",
        "filename": "service_files/xyz.openbmc_project.State.Chassis@.service",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1000000
      },
      "writtenOn": "2022-03-15T12:35:50Z",
      "side": 1,
      "message": "Shouldn\u0027t this be @%i?",
      "range": {
        "startLine": 6,
        "startChar": 32,
        "endLine": 6,
        "endChar": 33
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1fbfbc6f_5e7c6b2f",
        "filename": "service_files/xyz.openbmc_project.State.Chassis@.service",
        "patchSetId": 2
      },
      "lineNbr": 6,
      "author": {
        "id": 1001264
      },
      "writtenOn": "2022-03-15T14:29:13Z",
      "side": 1,
      "message": "Sure, I will replace with %i.\nI am not fully understand this service, that\u0027s the reason I left it as it is.\nAlso, there is another place hardcode with \"org.openbmc.control.Power\" \u0026  \"/org/openbmc/control/power0\" (chassis_state_manager.cpp), could you add comment there?",
      "parentUuid": "6d76e97b_5835971f",
      "range": {
        "startLine": 6,
        "startChar": 32,
        "endLine": 6,
        "endChar": 33
      },
      "revId": "04b43eff0082b5bec6e5a6e18313d076d8f4b9c5",
      "serverId": "adbd0a64-1f21-4d83-b585-671fe73cb6e4"
    }
  ]
}